[project]
name = "modelbatch"
version = "0.1.0"
description = "Train many independent PyTorch models simultaneously on a single GPU using vectorized operations"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "torch>=2.0.0",
    "numpy>=1.20.0",
    "optuna>=4.4.0",
]
keywords = ["pytorch", "machine learning", "vectorization", "gpu", "training"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "YTT", "S", "BLE", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "ARG", "PTH", "ERA", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["E501", "S101", "PLR0913", "PLR2004"]

[tool.ruff.format]
quote-style = "double"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[dependency-groups]
dev = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.15",
    "pytest>=8.4.1",
    "ruff>=0.12.2",
    "torchvision>=0.22.1",
]
integrations = [
    "pytorch-lightning>=2.5.2",
    "transformers>=4.53.1",
    "wandb>=0.21.0",
]
